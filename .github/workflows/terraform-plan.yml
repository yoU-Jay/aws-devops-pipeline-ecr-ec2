name: Deploy to AWS

on:
  pull_request:
    branches:
      - dev
      - main

env:
  IMAGE_TAG: ${{ github.sha }}
  ECR_REPO: "746669190910.dkr.ecr.us-east-1.amazonaws.com/my-node-ecr"

jobs:
  deploy:
    name: Deploy Infra and App
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Terraform Format Check
        working-directory: ./terraform
        run: terraform fmt -check -recursive

      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init --backend-config="backend.tfvars"

      - name: Terraform Validate
        working-directory: ./terraform
        run: terraform validate

      - name: Terraform Plan
        working-directory: ./terraform
        run: terraform plan -var-file="dev.tfvars"

      - name: Terraform Apply
        working-directory: ./terraform
        run: terraform apply -auto-approve -var-file="dev.tfvars"

      - name: Save all Terraform outputs to JSON
        working-directory: terraform
        run: terraform output -json > tf_output.json

      - name: Show terraform output json file contents
        run: cat terraform/tf_output.json

      # - name: Parse outputs without jq
      #   run: |
      #     EC2_HOST=$(grep -A2 '"ec2_host"' terraform/tf_output.json | grep '"value"' | sed -E 's/.*"value": "(.*)".*/\1/')
      #     echo "EC2_HOST=$EC2_HOST" >> $GITHUB_ENV
      #     ECR_REPO_URL=$(grep -A2 '"ecr_repo_url"' terraform/tf_output.json | grep '"value"' | sed -E 's/.*"value": "(.*)".*/\1/')          
      #     echo "ECR_REPO_URL=$ECR_REPO_URL" >> $GITHUB_ENV

      # - name: Check environment variables
      #   run: |
      #     echo "EC2_HOST=$EC2_HOST"
      #     echo "ECR_REPO_URL=$ECR_REPO_URL"

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push Docker image to ECR
        run: |
          docker build -t ${{ env.ECR_REPO }}:${{ env.IMAGE_TAG }} .
          docker push ${{ env.ECR_REPO }}:${{ env.IMAGE_TAG }}

      - name: SSH into EC2 and deploy container
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: "100.25.143.40"
          username: ${{ vars.EC2_USER }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: | 

            export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
            export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
            export AWS_REGION=${{ vars.AWS_REGION }}
            export ECR_REPO=${{ env.ECR_REPO }}
            export IMAGE_TAG=${{ env.IMAGE_TAG }}
            
            docker --version
            sudo systemctl status docker

            echo "Authenticating to ECR..."
            aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REPO
            sudo docker pull $ECR_REPO:$IMAGE_TAG
            sudo docker stop app || true && docker rm app || true
            sudo docker run -d -p 80:80 --name app $ECR_REPO:$IMAGE_TAG
            docker ps